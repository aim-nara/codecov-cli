# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build-and-Release

on:
  push:
    tags:
      - 'v*' # Runs only for tags that start with v (new versions)

jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: "Generate release changelog"
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }} 

  createrelease:
    name: Create Release
    runs-on: ubuntu-latest
    needs: changelog
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release For Tag
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: ${{ needs.changelog.outputs.changelog }}
        draft: ${{ contains(github.ref_name, 'test') }}
        prerelease: ${{ contains(github.ref_name, 'beta') }}

  buildassets:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
              pyinstaller -F codecov_cli/main.py &&
              cd dist/ &&
              zip -r9 codecovcli_macos_${{github.ref_name}}.zip main
            OUT_FILE_NAME: codecovcli_macos_${{github.ref_name}}.zip
            ASSET_MIME: application/zip
          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: >
              pyinstaller -F codecov_cli/main.py &&
              cp ./dist/main ./dist/codecovcli_linux_${{github.ref_name}}       
            OUT_FILE_NAME: codecovcli_linux_${{github.ref_name}}
            ASSET_MIME: application/octet-stream
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: >
              pyinstaller -F codecov_cli/main.py &&
              cp ./dist/main.exe ./dist/codecovcli_windows_${{github.ref_name}}.exe
            OUT_FILE_NAME: codecovcli_windows_${{github.ref_name}}.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"   
    - name: Install dependencies
      run: |
        pip install -r requirements.txt  
    - name: Install pyinstaller
      run: pip install pyinstaller
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.createrelease.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME }}
        asset_name: ${{ matrix.OUT_FILE_NAME }}
        asset_content_type: ${{ matrix.ASSET_MIME }}

  purge_release_if_failed:
    name: Delete release if build failed
    needs: buildassets
    runs-on: ubuntu-latest
    if: ${{ failure() || cancelled() }}
    steps:
    - uses: dev-drprasad/delete-tag-and-release@v0.2.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        delete_release: true
        tag_name: ${{ github.ref_name }}
